name: lint

on:

  pull_request:
    paths:
      - "webserver/**"
      - ".github/workflows/clippy-fmt.yml"
    types: [opened, synchronize, reopened]

jobs:

  clippy:
    name: clippy check
    runs-on: ubuntu-latest

    env:
      CI: 1
      CARGO_INCREMENTAL: false

    steps:
      - uses: actions/checkout@v4
#
#      - name: Install Rust
#        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
#        with:
#          toolchain: stable
#          components: clippy

      - name: clippy
        timeout-minutes: 30
        uses: giraffate/clippy-action@v1
        with:
          reporter: "github-pr-check"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clippy_flags: --workspace --all-features --tests

  setup-database:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache Cargo git
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Run Docker Compose
        run: cd webserver && docker compose up -d

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Run Docker Compose
        run: cd webserver && docker compose up -d

      - name: Run Tests
        env:
          DATABASE_URL: "postgres://myuser:mypassword@localhost:5432/postgres"
        run: cd webserver && cargo test --verbose
