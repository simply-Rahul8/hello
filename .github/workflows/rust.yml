name: Rust CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "webserver/**"
      - ".github/workflows/rust.yml"
  pull_request:
    paths:
      - "webserver/**"
      - ".github/workflows/rust.yml"
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo Target Directory
        uses: actions/cache@v3
        with:
          path: webserver/target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Setup Database
        env:
          TYPESENSE_API_KEY: ${{ secrets.TYPESENSE_API_KEY }}
        run: cd webserver && docker compose up -d

      - name: Run Tests
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TYPESENSE_API_KEY: ${{ secrets.TYPESENSE_API_KEY }}
          TYPESENSE_URL: ${{ secrets.TYPESENSE_URL }}
        run: cd webserver && cargo test --verbose
